# Generated by Django 2.2.10 on 2020-07-02 10:57

from django.db import migrations, models
import django.db.models.deletion
import kdl_wagtail.core.blocks
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.contrib.table_block.blocks
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.documents.blocks
import wagtail.embeds.blocks
import wagtail.images.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0045_assign_unlock_grouppagepermission'),
        ('wagtailimages', '0001_squashed_0021'),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('introduction', models.TextField(blank=True, help_text='Text to describe the page')),
                ('body', wagtail.core.fields.StreamField([('heading_block', wagtail.core.blocks.StructBlock([('show_in_menus', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('heading_text', wagtail.core.blocks.CharBlock(classname='title', required=True)), ('size', wagtail.core.blocks.ChoiceBlock(choices=[('', 'Select a header size'), ('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5')]))])), ('richtext_block', kdl_wagtail.core.blocks.RichTextBlock()), ('document_block', wagtail.core.blocks.StructBlock([('show_in_menus', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('transcription', kdl_wagtail.core.blocks.RichTextBlock(required=False)), ('description', kdl_wagtail.core.blocks.RichTextBlock(required=False)), ('attribution', wagtail.core.blocks.CharBlock(required=False)), ('caption', wagtail.core.blocks.CharBlock(required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=True))])), ('gallery_block', wagtail.core.blocks.StructBlock([('show_in_menus', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('images_block', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('show_in_menus', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('transcription', kdl_wagtail.core.blocks.RichTextBlock(required=False)), ('description', kdl_wagtail.core.blocks.RichTextBlock(required=False)), ('attribution', wagtail.core.blocks.CharBlock(required=False)), ('caption', wagtail.core.blocks.CharBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(help_text='Link to a page', required=False)), ('url', wagtail.core.blocks.URLBlock(help_text='External link', required=False)), ('alignment', wagtail.core.blocks.ChoiceBlock(choices=[('', 'Select block alignment'), ('float-left', 'Left'), ('float-right', 'Right'), ('float-center', 'Centre'), ('full-width', 'Full width')])), ('image', wagtail.images.blocks.ImageChooserBlock(required=True))])))])), ('image_block', wagtail.core.blocks.StructBlock([('show_in_menus', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('transcription', kdl_wagtail.core.blocks.RichTextBlock(required=False)), ('description', kdl_wagtail.core.blocks.RichTextBlock(required=False)), ('attribution', wagtail.core.blocks.CharBlock(required=False)), ('caption', wagtail.core.blocks.CharBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(help_text='Link to a page', required=False)), ('url', wagtail.core.blocks.URLBlock(help_text='External link', required=False)), ('alignment', wagtail.core.blocks.ChoiceBlock(choices=[('', 'Select block alignment'), ('float-left', 'Left'), ('float-right', 'Right'), ('float-center', 'Centre'), ('full-width', 'Full width')])), ('image', wagtail.images.blocks.ImageChooserBlock(required=True))])), ('link_block', wagtail.core.blocks.StructBlock([('show_in_menus', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('url', wagtail.core.blocks.URLBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('label', wagtail.core.blocks.CharBlock())])), ('pullquote_block', wagtail.core.blocks.StructBlock([('show_in_menus', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('quote', kdl_wagtail.core.blocks.RichTextBlock()), ('attribution', wagtail.core.blocks.CharBlock(required=False))])), ('embed_block', wagtail.core.blocks.StructBlock([('show_in_menus', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('transcription', kdl_wagtail.core.blocks.RichTextBlock(required=False)), ('description', kdl_wagtail.core.blocks.RichTextBlock(required=False)), ('attribution', wagtail.core.blocks.CharBlock(required=False)), ('caption', wagtail.core.blocks.CharBlock(required=False)), ('display', wagtail.core.blocks.ChoiceBlock(choices=[('', 'Select a display ratio'), ('widescreen', '16:9'), ('fourbythree', '4:3'), ('audio', 'Audio'), ('panorama', 'Panorama'), ('square', 'Square'), ('vertical', 'Vertical')], required=False)), ('embed_block', wagtail.embeds.blocks.EmbedBlock(help_text='Insert an embed URL', icon='media'))])), ('table_block', wagtail.core.blocks.StructBlock([('show_in_menus', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('transcription', kdl_wagtail.core.blocks.RichTextBlock(required=False)), ('description', kdl_wagtail.core.blocks.RichTextBlock(required=False)), ('attribution', wagtail.core.blocks.CharBlock(required=False)), ('caption', wagtail.core.blocks.CharBlock(required=False)), ('table', wagtail.contrib.table_block.blocks.TableBlock(required=True))]))], blank=True, verbose_name='Page body')),
                ('guest_authors', models.CharField(blank=True, max_length=256, null=True)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='BlogPostTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='cms.BlogPost')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cms_blogposttag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='blogpost',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='cms.BlogPostTag', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
