# Generated by Django 2.2.10 on 2021-04-28 12:21

from django.db import migrations

from controlled_vocabulary.utils import search_term_or_none
from radical_translations.core.vocabularies import (
    VocabularyParatextFunctions,
    VocabularyParatextTerms,
)


def paratext_forms_to_paratext_functions(apps, schema_editor):
    convert_paratext_terms(apps, schema_editor, VocabularyParatextFunctions)


def convert_paratext_terms(apps, schema_editor, cls):
    ControlledTerm = apps.get_model("controlled_vocabulary", "ControlledTerm")
    Classification = apps.get_model("core", "Classification")
    vocabulary = VocabularyParatextFunctions()

    for term in vocabulary._get_searchable_terms():
        label = term[0]

        found = search_term_or_none(cls.prefix, label)
        if found:
            ct = ControlledTerm.objects.get(id=found.id)

            for classification in Classification.objects.filter(edition__label=label):
                classification.edition = ct
                classification.save()


def paratext_functions_to_paratext_forms(apps, schema_editor):
    convert_paratext_terms(apps, schema_editor, VocabularyParatextTerms)


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0054_resourcerelationship_ordering"),
    ]

    operations = [
        migrations.RunPython(
            paratext_forms_to_paratext_functions, reverse_code=migrations.RunPython.noop
        )
    ]
